
configfile: "config.reference.json"

rule identify_gaps_for_assembly:
    input: gaps="gaps.bed", centromeres="centromeres.bed", chrom_info="chromInfo.txt"
    output: "gaps_to_assemble.bed"
    params: sge_opts="", slop="5000"
    shell:
        "sed '/heterochromatin/d;/short_arm/d;/telomere/d;/alt/d;/chrY/d' {input.gaps} | "
            "bedtools window -w 500 -a stdin -b {input.centromeres} -v | "
            "cut -f 1-3 | "
            "bedtools slop -i stdin -g {input.chrom_info} -b {params.slop} | "
            "bedtools merge -i stdin -d 1 > {output}"

rule prepare_centromeres_bed:
    input: "centromeres.txt.gz"
    output: "centromeres.bed"
    params: sge_opts=""
    shell: "zcat {input} | cut -f 2-4 | sort -k 1,1 -k 2,2n > {output}"

rule download_centromeres:
    output: temp("centromeres.txt.gz")
    params: sge_opts="", centromeres_url=config["centromeres"]
    shell: "wget {params.centromeres_url} -O {output}"

rule prepare_gaps_bed:
    input: "gaps.txt.gz"
    output: "gaps.bed"
    params: sge_opts=""
    shell: """zcat {input} | awk 'OFS="\\t" {{ print $2,$3,$4,$8,$7 }}' | sort -k 1,1 -k 2,2n > {output}"""

rule download_gaps:
    output: temp("gaps.txt.gz")
    params: sge_opts="", gaps_url=config["gaps"]
    shell: "wget {params.gaps_url} -O {output}"

rule prepare_chrom_info:
    input: "chromInfo.txt.gz"
    output: "chromInfo.txt"
    params: sge_opts=""
    shell: "zcat {input} > {output}"

rule download_chrom_info:
    output: temp("chromInfo.txt.gz")
    params: sge_opts="", chrom_info_url=config["chrom_info"]
    shell: "wget {params.chrom_info_url} -O {output}"
