configfile: "config.json"

REFERENCE = config.get("reference", "")

rule prepare_reference:
    input: [REFERENCE + extension for extension in (".fai", ".sa", ".ctab")]
    output: "reference_config.json"
    params: sge_opts=""
    run:
        files = tuple([REFERENCE] + list(input))
        shell("""echo '"reference": {{
    "assembly": "%s",
    "assembly_index": "%s",
    "suffix_array": "%s",
    "ctab": "%s"
}}' > {output}""" % files)

rule combine_low_complexity_and_simple_repeats:
    input: "low_complexity_repeats.bed", "simple_repeats.bed"
    output: "strs_in_reference.bed"
    params: sge_opts=""
    shell: "sort -k 1,1 -k 2,2n -m {input} > {output}"

rule get_low_complexity_repeats:
    input: "repeats.bed"
    output: "low_complexity_repeats.bed"
    params: sge_opts=""
    shell: """awk '$4 == "Low_complexity"' {input} > {output}"""

rule prepare_repeatmasker_repeats_bed:
    input: "rmsk.txt.gz"
    output: "repeats.bed"
    params: sge_opts=""
    shell: "zcat {input} | cut -f 6-8,12 | sort -k 1,1 -k 2,2n > {output}"

rule get_repeatmasker_repeats:
    output: "rmsk.txt.gz"
    params: sge_opts=""
    shell: "wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/{output} -O {output}"

rule prepare_simple_repeats_bed:
    input: "simpleRepeat.txt.gz"
    output: "simple_repeats.bed"
    params: sge_opts=""
    shell: "zcat {input} | cut -f 2-5 | sort -k 1,1 -k 2,2n > {output}"

rule get_simple_repeats:
    output: "simpleRepeat.txt.gz"
    params: sge_opts=""
    shell: "wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/{output} -O {output}"

# rule identify_gaps_for_assembly:
#     input: gaps="gaps.bed", centromeres="centromeres.bed", chrom_info="chromInfo.txt"
#     output: "gaps_to_assemble.bed"
#     params: sge_opts="", slop="5000"
#     shell:
#         "sed '/heterochromatin/d;/short_arm/d;/telomere/d;/alt/d;/chrY/d' {input.gaps} | "
#             "bedtools window -w 500 -a stdin -b {input.centromeres} -v | "
#             "cut -f 1-3 | "
#             "bedtools slop -i stdin -g {input.chrom_info} -b {params.slop} | "
#             "bedtools merge -i stdin -d 1 > {output}"

# rule prepare_centromeres_bed:
#     input: "centromeres.txt.gz"
#     output: "centromeres.bed"
#     params: sge_opts=""
#     shell: "zcat {input} | cut -f 2-4 | sort -k 1,1 -k 2,2n > {output}"

# rule download_centromeres:
#     output: temp("centromeres.txt.gz")
#     params: sge_opts="", centromeres_url=config["reference"]["centromeres_url"]
#     shell: "wget {params.centromeres_url} -O {output}"

# rule prepare_gaps_bed:
#     input: "gaps.txt.gz"
#     output: "gaps.bed"
#     params: sge_opts=""
#     shell: """zcat {input} | awk 'OFS="\\t" {{ print $2,$3,$4,$8,$7 }}' | sort -k 1,1 -k 2,2n > {output}"""

# rule download_gaps:
#     output: temp("gaps.txt.gz")
#     params: sge_opts="", gaps_url=config["gaps"]
#     shell: "wget {params.gaps_url} -O {output}"

rule prepare_tuple_count_table_for_reference:
    input: REFERENCE
    output: "%s.ctab" % REFERENCE
    params: sge_opts=""
    shell: "printTupleCountTable {input} > {output}"

rule prepare_suffix_array_for_reference:
    input: REFERENCE
    output: "%s.sa" % REFERENCE
    params: sge_opts=""
    shell: "sawriter {output} {input}"

rule index_reference:
    input: REFERENCE
    output: "%s.fai" % REFERENCE
    params: sge_opts=""
    shell: "samtools faidx {input}"
